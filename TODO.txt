1. edit the sparse har dataset to output the temporally contextualized packets
    -basically it outputs a numpy array with the data across all body parts
     and the time since the packet was sent where it is -1 if no packet is sent
     and 0 if it is the most recent packet

----------------------
2. create a sparse wrapper nn.module class
    -this changes the way the model does inference
        -for dense upper it does nothing, just pass through
        -for sparse lower it does inference for the corresp body parts
        -for learned context, it passes the at through a linear layer
         and then adds/concats it to the feature representation

    -these wrappers deal with this data format:
                        [{torso: (array,age), leg: (array,age)}, 
                         {torso: (array,age), leg: (array,age)},
                         {torso: (array,age), leg: (array,age)},...]
        -dense --> concatenate the dictionary values which are packets from each body part
        -lower --> get the packet which has age 0, find the corresponding bp model, do inference
        -learned --> same as dense but we put the ages through linear layer to augment context

3. figure out how to integrate into scripts

4. evaluate baselines 

-----------------------

need to integrate into evaluation (look at script and how args are passed in)
    then debug chain of functions

-------------------

1. get sparse eval working
2. change dense eval to be normal (more efficient)
    integrating